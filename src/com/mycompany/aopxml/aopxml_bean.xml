<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<aop:config>
		<aop:aspect id="logAspect" ref="logAspect">
			<aop:before pointcut="execution(* com.mycompany.aopxml.*.useAxe(..))" method="logBefore"></aop:before>
			<aop:after-returning pointcut="execution(* com.mycompany.aopxml.*.*(..))" returning="returnValue" method="logAfterReturning"></aop:after-returning>
			<aop:after pointcut="execution(* com.mycompany.aopxml.*.*AfterThrowing(..))" method="logAfter"></aop:after>
			<aop:after-throwing pointcut="execution(* com.mycompany.aopxml.*.testAfterThrowing(..))" throwing="ex" method="logAfterThrowing"></aop:after-throwing>
		</aop:aspect>
	</aop:config>   
	
 	<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
	<context:component-scan base-package="com.mycompany.aopxml">
	</context:component-scan> 
	
</beans>
	